オブジェクト指向とは p276~300参照
ソフトウェアを開発するときに用いる部品化の考え方

メリットは
「楽につくれて、楽しく、いいものを作れる」

 部品化について
 ファイルをメソッドやクラスでわけて
 一つのプログラムに組み合わせていく手法のこと

 オブジェクト指向による部品化のルール
 現実世界に出てくる登場人物の単位でプログラムをクラスに分割する

オブジェクト指向の本質は
現実世界の登場人物のふるまいと動き、コンピューターの仮想世界で実現すること

責務の割り当て
開発者はそれぞれの部品に責務（それぞれの役割）をプログラムとして書きこむ


 p283
 今まで習ってきた基本文法は
 手続き型プログラミングといい
 コンピューターがどのような動きをするかの手順を一から１０まで決めるもの

 オブジェクト指向は
 現実世界を模した形でその形の物や動きを元として作っていく方法
 オブジェクトをどう作るか、どう連携させるかを第一に意識する


オブジェクト指向のとらえ方
1 Mainクラスに書かれているmainメソッドは
 class毎の動きを統括して動かす場所
 他のクラスのインスタンスを生成する。
 生成されたオブジェクトを操作するためのメソッドを呼び出す。
 データの入力や出力を行う。
 プログラムのフローを制御する条件分岐やループを実行する。


2 メソッドは行動や動きを決めるもの
  フィールドや変数はそのもの自体の物体
  それの一連の動作を一個体として扱うのがクラス
  これのすべての概念をオブジェクトと呼ぶ

  オブジェクト指向による名前の違い p289参照
  属性 ・・・ フィールドにあてられる変数や型
  操作 ・・・ 動きを決めるメソッド

  属性には情報保持責任（覚えておく責任）がある
  操作には行動責任（行動をする責任）がある

  オブジェクト指向の三大機能
  継承・・・過去のものを引き継いだ追加されたオブジェクトを作る
  多様性・・・関連されたものを広くとらえて利用できる方法
  カプセル化・・・属性、操作を制限して、安全に取り扱いをするようにさせる方法


